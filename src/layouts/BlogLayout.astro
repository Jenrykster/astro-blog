---
import Icon from "astro-icon";
import { Picture } from "astro-imagetools/components";
import Layout from "./Layout.astro";

const { slug } = Astro.params;
const { title, description, date, image } = Astro.props.frontmatter;
const {
  PUBLIC_VIEW_COUNTER_API: viewCounterURL,
  PUBLIC_SECRET_LOL: secret,
  DEV: devEnv,
} = import.meta.env;
---

<Layout title={title} description={description} isPost thumbnail={image}>
  <div
    class="flex gap-4 flex-col items-center max-w-sm w-1/2 justify-around mb-4"
  >
    <div
      class="flex text-accent items-center gap-2 no-underline w-12 justify-between"
    >
      <Icon name="ic:outline-visibility" size={24} />
      <p id="number-of-views">...</p>
    </div>
    <div class="flex w-auto text-accent underline">
      <p class="text-text text-center font-body">
        Published on {new Date(date).toLocaleDateString("en-GB")}
      </p>
    </div>
  </div>
  <Picture src={image.url} alt={image.alt} width="550" height="300" />
  <q class="text-text font-body p-4">
    {description}
  </q>
  <section class="text-text font-body self-center blog-post max-w-3xl w-full">
    <slot />
    <div class="giscus my-10"></div>
  </section>
  <script
    src="https://giscus.app/client.js"
    data-repo="jenrykster/astro-blog"
    data-repo-id="R_kgDOKX1xHQ"
    data-category="Giscus"
    data-category-id="DIC_kwDOKX1xHc4CZ8oc"
    data-mapping="url"
    data-strict="0"
    data-reactions-enabled="1"
    data-emit-metadata="0"
    data-input-position="top"
    data-theme="preferred_color_scheme"
    data-lang="en"
    data-loading="lazy"
    crossorigin="anonymous"
    async></script>
  <script define:vars={{ slug, secret, viewCounterURL, devEnv }}>
    async function getAndUpdateViews() {
      const res = await fetch(
        `${viewCounterURL}?post=${slug}&secret=${secret}`,
      );
      const info = await res.json();

      if (info.item) {
        document.querySelector("#number-of-views").innerText =
          info.item.numberOfViews;
      }
    }
    if (!devEnv) {
      window.addEventListener("astro:after-swap", getAndUpdateViews);
      getAndUpdateViews();
    }
  </script>
</Layout>
